
/** 
\page lua_resources Resources about lua

\section lua_intro Introduction

Yzis uses lua 5.0 . Because versions of lua are not compatible between
themselves, we will stick to lua 5.0 because it works well (and we will not
touch lua 5.1)

Most of the lua information can be found on the lua wiki:
<a href="http://lua-users.org/wiki/">Lua Wiki</a>

There is an excellent tutorial about lua:
<a href="http://lua-users.org/wiki/TutorialDirectory">Lua Tutorial</a>.

All you need to know about lua is contained in one short manual (but the
tutorial is strongly recommended):
<a href="http://www.lua.org/manual/5.0/">Lua 5.0 Manual</a>

\section lua_embedding_info Brief lua information for embedding 

This section is only relevant to people working on adding new functions to lua
in C++.

The lua types relevant to Yzis are: nil, number, boolean, string, table,
functions. Table is both a list and a dictionary (in lua, a list is a mapping
from a number - the index - to a value). Since lua is coded in C, boolean are
actually int. A number in lua is a double.

Popping from the lua stack:
\li double lua_tonumber (lua_State * L, int index));
\li int    lua_toboolean(lua_State * L, int index));
\li const char * lua_tostring (lua_State * L, int index));

Putting on the lua stack:
\li void lua_pushnumber( lua_State * L, int val );
\li void lua_pushstring( lua_State * L, char * s );
\li void lua_pushboolean( lua_State * L, int b );

Lua strings are encoded in utf8. The appropriate method of QString should be
used to deal with them:
\code
    QString text, text2;
	text = QString::fromUtf8( (char *) lua_tostring ( L, 1 ) );
    /* ... */
	lua_pushstring(L, text2.toUtf8());
\endcode

other useful lua functions:
\li int lua_getteop(lua_State * L) : number of elements of the stack
\li int lua_type(lua_State * L, int idx)) : type of the element at index idx
\li int lua_isxyz( lua_State * L, int idx ) : with xyz being 'number', 'string', 'boolean'; return 1 if the element in the stack is of type xyz

*/
